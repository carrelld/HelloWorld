package com.dagrca.projecteuler;

/**
 * User: carrelld
 * Date: 3/23/2016
 * Time: 12:22 PM
 * Purpose: Solution for problem 2 attempting to do independently of github solution
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four
 * million, find the sum of the even-valued terms.
 *
 *
 */
public class p002 implements EulerSolution{

    public static void main(String[] args) {
        System.out.println(new p002().run());
    }

    @Override
    public String run() {
        int n1 = 1;
        int n2 = 2;
        int sumEvens = 0;
        // Make sure first number is not even because loop only checks n2
        if (n1 % 2 == 0) {
            sumEvens += n1;
        }

        while(n2 < 4000000) {
            if (n2 % 2 == 0) {
                sumEvens += n2;
            }
            int next = n1 + n2;
            n1 = n2;
            n2 = next;
        }
        return Integer.toString(sumEvens);
    }
}
